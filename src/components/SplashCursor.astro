---
// SplashCursor.astro - Lightweight cursor trail with two trailing dots
---

<div id="splash-cursor" class="splash-cursor">
  <div class="cursor-triangle"></div>
  <div class="cursor-halo"></div>
</div>

<style>
  .splash-cursor {
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
    transition: opacity 0.3s ease;
  }

  .cursor-triangle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(-45deg);
    width: 0;
    height: 0;
    /* Better proportions: 25px height, 18px base width for proper triangle shape */
    border-left: 9px solid transparent;
    border-right: 9px solid transparent;
    border-bottom: 25px solid var(--cursor-color);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                border-bottom-width 0.3s ease;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
  }

  .cursor-halo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    background: radial-gradient(circle, 
      rgba(var(--cursor-color-rgb), 0.5) 0%, 
      rgba(var(--cursor-color-rgb), 0.25) 40%, 
      rgba(var(--cursor-color-rgb), 0.1) 70%,
      transparent 85%);
    border-radius: 50%;
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: 0.9;
  }

  /* Hover effects */
  .splash-cursor.hovering .cursor-triangle {
    transform: translate(-50%, -50%) rotate(0deg);
    border-bottom-width: 25px;
  }

  .splash-cursor.hovering .cursor-halo {
    transform: translate(-50%, -50%);
    opacity: 1;
  }

  /* Theme-aware colors */
  html.light-theme {
    --cursor-color: #1E3A8A;
    --cursor-color-rgb: 30, 58, 138;
  }

  html:not(.light-theme) {
    --cursor-color: #EAB308;
    --cursor-color-rgb: 234, 179, 8;
  }

  /* Hide on touch devices and when reduced motion is preferred */
  @media (hover: none) and (pointer: coarse) {
    .splash-cursor {
      display: none;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .cursor-triangle,
    .cursor-halo {
      transition: none;
    }
  }

  /* Aggressive cursor hiding - maximum specificity */
  html * {
    cursor: none !important;
  }

  html *:hover,
  html *:focus,
  html *:active,
  html *:visited {
    cursor: none !important;
  }

  html a,
  html button,
  html input,
  html textarea,
  html select,
  html [role="button"],
  html [tabindex]:not([tabindex="-1"]) {
    cursor: none !important;
  }

  html a:hover,
  html button:hover,
  html input:hover,
  html textarea:hover,
  html select:hover,
  html [role="button"]:hover,
  html [tabindex]:not([tabindex="-1"]):hover {
    cursor: none !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Check if user prefers reduced motion
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      console.log('Cursor trail disabled due to reduced motion preference');
      return;
    }
    
    const splashCursor = document.getElementById('splash-cursor');
    const triangle = splashCursor?.querySelector('.cursor-triangle');
    const halo = splashCursor?.querySelector('.cursor-halo');
    
    if (!splashCursor || !triangle || !halo) return;
    
    let mouseX = 0;
    let mouseY = 0;
    let haloX = 0;
    let haloY = 0;
    let isVisible = false;
    
    // Force hide native cursor with JavaScript
    const forceHideCursor = () => {
      document.body.style.cursor = 'none';
      document.documentElement.style.cursor = 'none';
      
      // Apply to all elements
      const allElements = document.querySelectorAll('*');
      allElements.forEach(el => {
        el.style.cursor = 'none';
      });
    };
    
    // Initial hide
    forceHideCursor();
    
    // Smooth halo following with easing
    function animateHalo() {
      const ease = 0.15;
      haloX += (mouseX - haloX) * ease;
      haloY += (mouseY - haloY) * ease;
      
      halo.style.left = haloX + 'px';
      halo.style.top = haloY + 'px';
      requestAnimationFrame(animateHalo);
    }
    
    // Mouse move handler
    function handleMouseMove(e) {
      mouseX = e.clientX;
      mouseY = e.clientY;
      
      // Update triangle position immediately
      triangle.style.left = mouseX + 'px';
      triangle.style.top = mouseY + 'px';
      
      // Show cursor if hidden
      if (!isVisible) {
        splashCursor.style.opacity = '1';
        isVisible = true;
      }
    }
    
    // Mouse enter/leave handlers for hover effects
    function handleMouseEnter() {
      splashCursor.classList.add('hovering');
    }
    
    function handleMouseLeave() {
      splashCursor.classList.remove('hovering');
    }
    
    // Hide cursor when mouse leaves window
    function handleMouseOut(e) {
      if (!e.relatedTarget || e.relatedTarget.nodeName === 'HTML') {
        splashCursor.style.opacity = '0';
        isVisible = false;
      }
    }
    
    // Event listeners
    document.addEventListener('mousemove', handleMouseMove);
    document.addEventListener('mouseout', handleMouseOut);
    
    // Add hover effects for interactive elements
    const interactiveElements = document.querySelectorAll('a, button, input, textarea, select, [role="button"], [tabindex]:not([tabindex="-1"])');
    interactiveElements.forEach(element => {
      element.addEventListener('mouseenter', handleMouseEnter);
      element.addEventListener('mouseleave', handleMouseLeave);
    });
    
    // Start halo animation
    animateHalo();
    
    // Ensure cursor is hidden initially
    splashCursor.style.opacity = '0';
    
    // Re-apply cursor hiding when DOM changes
    const observer = new MutationObserver(forceHideCursor);
    observer.observe(document.body, { childList: true, subtree: true });
  });
</script> 